"0",""
"0","server <- function(input, output) {"
"0","  observeEvent(input$runPython, {"
"0","    print(""Button clicked!"")"
"0","    python_code <- """
"0","    import numpy as np"
"0","    import matplotlib.pyplot as plt"
"0","  "
"0","    x = np.linspace(0, 10, 100)"
"0","    y = np.sin(x)"
"0","  "
"0","    plt.plot(x, y)"
"0","    plt.xlabel('x')"
"0","    plt.ylabel('y')"
"0","    plt.title('Sine Wave')"
"0","    plt.grid(True)"
"0","    plt.savefig('sine_wave.png')"
"0","    plt.show()"
"0","    """
"0","  "
"0","    # Execute Python code using reticulate"
"0","    reticulate::py_run_string(python_code)"
"0","  "
"0","    # Capture the generated plot using webshot"
"0","    webshot(""sine_wave.png"", ""sine_wave_capture.png"")"
"0","})"
"2","Error: Incomplete expression: 
server <- function(input, output) {
  observeEvent(input$runPython, {
    print(""Button clicked!"")
    python_code <- ""
    import numpy as np
    import matplotlib.pyplot as plt
  
    x = np.linspace(0, 10, 100)
    y = np.sin(x)
  
    plt.plot(x, y)
    plt.xlabel('x')
    plt.ylabel('y')
    plt.title('Sine Wave')
    plt.grid(True)
    plt.savefig('sine_wave.png')
    plt.show()
    ""
  
    # Execute Python code using reticulate
    reticulate::py_run_string(python_code)
  
    # Capture the generated plot using webshot
    webshot(""sine_wave.png"", ""sine_wave_capture.png"")
})
"
